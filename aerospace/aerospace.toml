# You can use it to add commands that run after login to macOS user session.
# 'start-at-login' needs to be 'true' for 'after-login-command' to work
# Available commands: https://nikitabobko.github.io/AeroSpace/commands
after-login-command = []

# You can use it to add commands that run after AeroSpace startup.
# 'after-startup-command' is run after 'after-login-command'
# Available commands : https://nikitabobko.github.io/AeroSpace/commands
after-startup-command = []

# Notify Sketchybar about workspace change
exec-on-workspace-change = [
  '/bin/bash',
  '-c',
  'sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE',
]

# Start AeroSpace at login
start-at-login = true

# Normalizations. See: https://nikitabobko.github.io/AeroSpace/guide#normalization
enable-normalization-flatten-containers = true
enable-normalization-opposite-orientation-for-nested-containers = true

# See: https://nikitabobko.github.io/AeroSpace/guide#layouts
# The 'accordion-padding' specifies the size of accordion padding
# You can set 0 to disable the padding feature
accordion-padding = 0

# Possible values: tiles|accordion
default-root-container-layout = 'tiles'

# Possible values: horizontal|vertical|auto
# 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,
#               tall monitor (anything higher than wide) gets vertical orientation
default-root-container-orientation = 'auto'

# Mouse follows focus when focused monitor changes
# Drop it from your config, if you don't like this behavior
# See https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks
# See https://nikitabobko.github.io/AeroSpace/commands#move-mouse
# Fallback value (if you omit the key): on-focused-monitor-changed = []
#on-focused-monitor-changed = ['move-mouse monitor-lazy-center']

# You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag
# Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key
# Also see: https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app
automatically-unhide-macos-hidden-apps = true

on-focus-changed = "move-mouse window-lazy-center"

# Possible values: (qwerty|dvorak)
# See https://nikitabobko.github.io/AeroSpace/guide#key-mapping
[key-mapping]
preset = 'qwerty'

# Gaps between windows (inner-*) and between monitor edges (outer-*).
# Possible values:
# - Constant:     gaps.outer.top = 8
# - Per monitor:  gaps.outer.top = [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]
#                 In this example, 24 is a default value when there is no match.
#                 Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.
#                 See: https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors
[gaps]
inner.horizontal = 5
inner.vertical = 5
outer.left = 5
outer.bottom = 5
outer.top = 34
outer.right = 5

# 'main' binding mode declaration
# See: https://nikitabobko.github.io/AeroSpace/guide#binding-modes
# 'main' binding mode must be always presented
# Fallback value (if you omit the key): mode.main.binding = {}
[mode.main.binding]
# all possible keys:
# - letters.        a, b, c, ..., z
# - numbers.        0, 1, 2, ..., 9
# - keypad numbers. keypad0, keypad1, keypad2, ..., keypad9
# - f-keys.         f1, f2, ..., f20
# - special keys.   minus, equal, period, comma, slash, backslash, quote, semicolon, backtick,
#                   leftsquarebracket, rightsquarebracket, space, enter, esc, backspace, tab
# - keypad special. keypadclear, keypaddecimalmark, keypaddivide, keypadenter, keypadequal,
#                   keypadminus, keypadmultiply, keypadplus
# - arrows.         left, down, up, right

# all possible modifiers: cmd, alt, ctrl, shift

# all possible commands: https://nikitabobko.github.io/aerospace/commands

# see: https://nikitabobko.github.io/aerospace/commands#exec-and-forget
# you can uncomment the following lines to open up terminal with alt + enter shortcut (like in i3)
# alt-enter = '''exec-and-forget osascript -e '
# tell application "terminal"
#     do script
#     activate
# end tell'
# '''

# see: https://nikitabobko.github.io/aerospace/commands#layout
cmd-alt-ctrl-t = 'layout tiles horizontal vertical'
cmd-alt-ctrl-s = 'layout v_accordion'
cmd-alt-ctrl-r = 'layout h_accordion'

cmd-alt-enter = 'exec-and-forget open -a kitty'
cmd-alt-space = 'exec-and-forget open -a /Applications/Zen\ Browser.app'
cmd-alt-o = 'exec-and-forget open -a /Applications/Obsidian.app'
cmd-alt-m = 'exec-and-forget open -a /Applications/Texts.app'

# see: https://nikitabobko.github.io/aerospace/commands#focus
cmd-alt-left = 'focus left --boundaries all-monitors-outer-frame'
cmd-alt-down = 'focus down --boundaries all-monitors-outer-frame'
cmd-alt-up = 'focus up --boundaries all-monitors-outer-frame'
cmd-alt-right = 'focus right --boundaries all-monitors-outer-frame'

# see: https://nikitabobko.github.io/aerospace/commands#move
cmd-ctrl-shift-left = 'move left'
cmd-ctrl-shift-down = 'move down'
cmd-ctrl-shift-up = 'move up'
cmd-ctrl-shift-right = 'move right'

cmd-ctrl-alt-left = ['join-with left']
cmd-ctrl-alt-down = ['join-with down']
cmd-ctrl-alt-up = ['join-with up']
cmd-ctrl-alt-right = ['join-with right']

# see: https://nikitabobko.github.io/aerospace/commands#resize
cmd-alt-minus = 'resize smart -50'
cmd-alt-equal = 'resize smart +50'

# see: https://nikitabobko.github.io/aerospace/commands#workspace
# alt-leftsquarebracket = 'workspace --wrap-around prev'
# alt-rightsquarebracket = 'workspace --wrap-around next'

cmd-alt-1 = 'workspace 1'
cmd-alt-2 = 'workspace 2'
cmd-alt-3 = 'workspace 3'
cmd-alt-4 = 'workspace 4'
cmd-alt-5 = 'workspace 5'
cmd-alt-6 = 'workspace 6'
cmd-alt-7 = 'workspace 7'
cmd-alt-8 = 'workspace 8'

# move windows to workspaces and switch to it
# todo: alt-ctrl to move to workspace without switching to it
cmd-alt-ctrl-1 = ['move-node-to-workspace 1', 'workspace 1']
cmd-alt-ctrl-2 = ['move-node-to-workspace 2', 'workspace 2']
cmd-alt-ctrl-3 = ['move-node-to-workspace 3', 'workspace 3']
cmd-alt-ctrl-4 = ['move-node-to-workspace 4', 'workspace 4']
cmd-alt-ctrl-5 = ['move-node-to-workspace 5', 'workspace 5']
cmd-alt-ctrl-6 = ['move-node-to-workspace 6', 'workspace 6']
cmd-alt-ctrl-7 = ['move-node-to-workspace 7', 'workspace 7']
cmd-alt-ctrl-8 = ['move-node-to-workspace 8', 'workspace 8']

# see: https://nikitabobko.github.io/aerospace/commands#workspace-back-and-forth
cmd-alt-tab = 'workspace-back-and-forth'

# see: https://nikitabobko.github.io/aerospace/commands#move-workspace-to-monitor
cmd-alt-ctrl-tab = 'move-workspace-to-monitor --wrap-around next'

cmd-alt-z = 'fullscreen'

# see: https://nikitabobko.github.io/aerospace/commands#mode
cmd-alt-s = 'mode service'

# 'service' binding mode declaration.
# TODO: Think more carefully about this mode
# see: https://nikitabobko.github.io/aerospace/guide#binding-modes
[mode.service.binding]
enter = ['reload-config', 'mode main']
space = ['mode main']
esc = ['mode main']
r = ['flatten-workspace-tree', 'mode main'] # reset layout
f = [
  'layout floating tiling',
  'mode main',
] # Toggle between floating and tiling layout
backspace = ['close-all-windows-but-current', 'mode main']
left = 'resize width -10'
down = 'resize height -10'
up = 'resize height +10'
right = 'resize width +10'
equal = ['balance-sizes', 'mode main']

# sticky is not yet supported https://github.com/nikitabobko/AeroSpace/issues/2
#s = ['layout sticky tiling', 'mode main']
alt-left = ['join-with left', 'mode main']
alt-down = ['join-with down', 'mode main']
alt-up = ['join-with up', 'mode main']
alt-right = ['join-with right', 'mode main']

[workspace-to-monitor-force-assignment]
1 = 'main'
2 = 'main'
3 = 'main'
4 = 'main'
5 = ['secondary', 'main']
6 = ['secondary', 'main']
7 = ['secondary', 'main']
8 = ['secondary', 'main']

[[on-window-detected]]
if.app-id = 'com.apple.finder'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.AppStore'
run = ['layout floating']

[[on-window-detected]]
if.app-id = 'com.apple.ActivityMonitor'
run = ['layout floating']

[[on-window-detected]]
if.app-name-regex-substring = '1Password'
run = ['layout floating']

[[on-window-detected]]
if.window-title-regex-substring = "Picture-in-Picture"
run = ['layout floating']
