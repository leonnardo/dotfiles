# set is an alias for set-option
# -p is to set for pane
# -w is to set for window
# -s is to set for server
# otherwise, it is for session
# if option isn't an user option, -w or -s maybe unnecessary
# -g sets the global session or window option
#
# -a append to the option
# example: set -g status-left "foo"
#          set -ag status-left "bar"
# will result in status-left "foobar"
# setw is an alias for set -w

# colors
set -g default-terminal "tmux-256color"
# set -g default-terminal "xterm-256color"
set -as terminal-features ",*:RGB"

# undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# underscore colours - needs tmux-3.0
set -as terminal-overrides ',*:Setulc=\E[58::2::::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# xterm keys options
set -g extended-keys on
set -as terminal-features 'xterm*:extkeys'

set -g visual-activity off
set -g monitor-activity on
set -g bell-action none
set -g detach-on-destroy off

set -g pane-border-lines single
set -g pane-border-indicators colour
set -g focus-events on

# TODO: back prefix to C-b
unbind C-b
set -g prefix C-Space
bind C-Space send-prefix

# reload config file
bind r source-file ~/.config/tmux/tmux.conf \; display 'config reloaded'

# mouse mode
set -g mouse on
set -s set-clipboard on

# don't rename windows automatically
set -g allow-rename off

# renumber windows when a window is closed
set -g renumber-windows on

# start windows and panes at 1
set -g base-index 1
setw -g pane-base-index 1

# hook for resizing panes on client resize
set-hook -g client-resized resize-pane

# no confirm before kill pane/window
bind w kill-pane

bind - splitw -v -c "#{pane_current_path}"

# new window
bind t new-window

# Switch ? and /
bind ? list-keys -N
bind / command-prompt -k -p key { list-keys -1N "%%" }

bind s run "sesh connect \"$(
  sesh list -H -t --icons | fzf-tmux -p 65%,30% \
    --no-sort --ansi --border-label ' sesh ' --prompt '‚ö°  ' \
    --header '^t tmux ^g configs ^x zoxide ^delete tmux kill ^f find ^a all' \
    --bind 'tab:down,btab:up' \
    --bind 'ctrl-t:change-prompt(ü™ü  )+reload(sesh list -t --icons)' \
    --bind 'ctrl-a:change-prompt(‚ö°  )+reload(sesh list --icons)' \
    --bind 'ctrl-g:change-prompt(‚öôÔ∏è  )+reload(sesh list -c --icons)' \
    --bind 'ctrl-x:change-prompt(üìÅ  )+reload(sesh list -z --icons)' \
    --bind 'ctrl-f:change-prompt(üîé  )+reload(fd -H -d 2 -t d -E .Trash . ~)' \
    --bind 'ctrl-delete:execute(tmux kill-session -t {2..})+change-prompt(‚ö°  )+reload(sesh list -t --icons)' \
)\""

# pane movement with smart-splits.nvim
bind -n C-Left if -F "#{@pane-is-vim}" 'send-keys C-Left'  'select-pane -L'
bind -n C-Right if -F "#{@pane-is-vim}" 'send-keys C-Right'  'select-pane -R'
bind -n C-Up if -F "#{@pane-is-vim}" 'send-keys C-Up'  'select-pane -U'
bind -n C-Down if -F "#{@pane-is-vim}" 'send-keys C-Down'  'select-pane -D'

bind -n C-S-Left previous-window
bind -n C-S-Right next-window

setw -g mode-keys vi
if-shell "uname | grep Darwin" {
   bind-key -T copy-mode-vi y send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
   bind-key -T copy-mode-vi Enter send -X copy-pipe-and-cancel 'reattach-to-user-namespace pbcopy'
   bind -T copy-mode-vi S-MouseDragEnd1Pane send-keys -X copy-selection -x 'reattach-to-user-namespace'
} {
   bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "clip.exe"
   bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "clip.exe"
   bind -T copy-mode-vi S-MouseDragEnd1Pane send-keys -X copy-selection -x "clip.exe"
}
bind -T copy-mode-vi v send-keys -X begin-selection
bind -T copy-mode-vi r send-keys -X rectangle-toggle
bind -T copy-mode-vi S-MouseDown1Pane send-keys -X clear-selection
bind -T copy-mode-vi Escape send-keys -X cancel

bind P paste-buffer

# Allows for faster key repetition
set -s escape-time 10

# tmux messages are displayed for 2 seconds
set -g display-time 2000

# increase scrollback buffer size
set -g history-limit 50000

set -g status-position top
set -g status-justify left
set -g status-style "bg=default"
set -g status-left-length 200
# set -g status-left '#{?client_prefix,#[bg=colour212]PFX.#[bg=colour202]#S,#[fg=white,bg=colour203,bold]#S}'
set -g status-left "#{?client_prefix,#[fg=white#,bg=color11#,bold]Ôíµ,#[fg=color3]Ó™Ö} #S#[bg=black] "
set -g status-right ""
set -g window-status-current-format "#[fg=color10][#I: #W]"
set -g window-status-format "#[fg=color4] #I: #W"
set -g window-status-last-style ""

#### Plugins
set-environment -gF TMUX_PLUGIN_MANAGER_PATH '#{HOME}/.local/share/tmux/plugins'
if 'test ! -d "${TMUX_PLUGIN_MANAGER_PATH}/tpm"' {
  run 'mkdir -p "${TMUX_PLUGIN_MANAGER_PATH}"'
  run 'git clone https://github.com/tmux-plugins/tpm "${TMUX_PLUGIN_MANAGER_PATH}/tpm"'
  run '${TMUX_PLUGIN_MANAGER_PATH}/tpm/bin/install_plugins'
}
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'kenos1/tmux-cht-sh'
set -g @plugin 'b0o/tmux-autoreload'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
# set -g @plugin 'dracula/tmux'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'Morantron/tmux-fingers'
run '~/code/dotfiles/tmux/plugins/os_icon.sh'

set -g @tmux2k-theme 'duo'
set -g @tmux2k-start-icon "session"
set -g @tmux2k-time-colors "white black"
set -g @tmux2k-left-plugins " "
set -g @tmux2k-right-plugins "time"
set -g @tmux2k-compact-windows true
set -g @tmux2k-window-colors "black white"

run '#{TMUX_PLUGIN_MANAGER_PATH}/tpm/tpm'

# set -g @plugin 'tmux-plugins/tmux-resurrect'
# set -g @resurrect-capture-pane-contents 'on'
# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'
# set -g @continuum-save-interval '5'
# set -g @plugin 'tardunge/kmux-status' # need to configure
