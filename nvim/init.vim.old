" TODO: refactor to lua config based on this site: https://alpha2phi.medium.com/neovim-init-lua-e80f4f136030

" ============= Vim-Plug ============== "{{{
let vimplug_exists=expand('~/.config/nvim/autoload/plug.vim')
let g:vim_bootstrap_editor = "nvim"

if !filereadable(vimplug_exists)
  if !executable("curl")
    echoerr "You have to install curl or first install vim-plug yourself!"
    execute "q!"
  endif
  echo "Installing Vim-Plug..."
  echo ""
  silent exec "!\curl -fLo " . vimplug_exists . " --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim"
  let g:not_finish_vimplug = "yes"
  autocmd VimEnter * PlugInstall
endif

call plug#begin('~/.config/nvim/plugged')
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'yuki-ycino/fzf-preview.vim'
"Plug 'vim-airline/vim-airline'
"Plug 'vim-airline/vim-airline-themes'
Plug 'romgrk/barbar.nvim'
"Plug 'akinsho/nvim-bufferline.lua'
Plug 'hoob3rt/lualine.nvim'
"Plug 'rakr/vim-one'
Plug 'morhetz/gruvbox'
"Plug 'arcticicestudio/nord-vim'
Plug 'tpope/vim-fugitive'
Plug 'wakatime/vim-wakatime'
Plug 'airblade/vim-gitgutter'
Plug 'jiangmiao/auto-pairs'
Plug 'tpope/vim-surround'
Plug 'vim-test/vim-test'
Plug 'liuchengxu/vim-which-key'
Plug 'kdheepak/lazygit.vim'
Plug 'mhinz/vim-startify'
Plug 'uarun/vim-protobuf'
Plug 'hashivim/vim-terraform'
Plug 'preservim/nerdcommenter'
Plug 'https://github.com/preservim/nerdtree'
Plug 'kyazdani42/nvim-web-devicons'
Plug 'ryanoasis/vim-devicons'
Plug 'sebdah/vim-delve'
Plug 'junegunn/vim-easy-align'
Plug 'neovim/nvim-lspconfig'
Plug 'kabouzeid/nvim-lspinstall'
Plug 'hrsh7th/nvim-cmp'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/cmp-buffer'
Plug 'nvim-treesitter/nvim-treesitter', {'do': ':TSUpdate'}
Plug 'christoomey/vim-tmux-navigator'

" Neovim Telescope
Plug 'nvim-lua/popup.nvim'
Plug 'nvim-lua/plenary.nvim'
Plug 'nvim-telescope/telescope.nvim'
call plug#end()
" }}}

let mapleader = " "

" Editor
filetype plugin indent on
set hidden
set nowrap
set encoding=utf-8
set pumheight=10
set cmdheight=2
set iskeyword+=-
set iskeyword+=_
set mouse=a
set splitbelow
set splitright
set number
set cursorline
set expandtab
set smarttab
set tabstop=2
set shiftwidth=2
set autoindent
set smartindent
set incsearch
set hlsearch
set list
set listchars=tab:→\ ,trail:▫,eol:⏎
set showcmd
set noshowmode
set noswapfile
set nobackup
set nowritebackup
set updatetime=250
set timeoutlen=500
set signcolumn=yes
set clipboard=unnamedplus
set shortmess+=c
set completeopt=menu,menuone,noselect

" Set to auto read when a file is changed from the outside
set autoread
au FocusGained,BufEnter * checktime

colorscheme gruvbox
set background=dark
set termguicolors

highlight Comment cterm=italic gui=italic
hi Normal guibg=NONE ctermbg=NONE
let g:airline_theme='gruvbox'
let g:airline_powerline_fonts = 1
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#hunks#enabled = 0

set pyx=3
let g:python3_host_prog = expand('~/.asdf/shims/python')
let g:loaded_python_provider = 0

" Save & quit
noremap <leader>q :q<CR>
noremap <silent> Q :bw<CR>
noremap <C-q> :qa<CR>

" FZF
set rtp+=/usr/local/opt/fzf
noremap <silent> <leader>f :Lines<CR>
noremap <silent> <leader>F :Rg<CR>
noremap <silent> <leader>e :History<CR>
noremap <silent> <leader>u :Files<CR>

let g:fzf_layout = { 'window': { 'width': 0.9, 'height': 0.6 } }

nnoremap <silent> <M-Up> :res +1<CR>
nnoremap <silent> <M-Down> :res -1<CR>
nnoremap <silent> <M-S-Left> :vertical res -1<CR>
nnoremap <silent> <M-S-Right> :vertical res +1<CR>

nnoremap <C-Down> <C-W><C-J>
nnoremap <C-Up> <C-W><C-K>
nnoremap <C-Right> <C-W><C-L>
nnoremap <C-Left> <C-W><C-H>


augroup go
  autocmd!
  " Show by default 4 spaces for a tab
  autocmd BufNewFile,BufRead *.go setlocal noexpandtab tabstop=4 shiftwidth=4
augroup END

" LazyGit
nnoremap <silent> <leader>lg :LazyGit<CR>

" vim-plug mappings
noremap <silent> <leader>pi :PlugInstall<CR>

" Move block of lines (normal or visual) using shift+[NE]
xnoremap <silent> N :move '>+1<CR>gv-gv
xnoremap <silent> E :move '<-2<CR>gv-gv

" Vim which key for <leader>
nnoremap <silent> <leader> :silent <c-u> :silent WhichKey '<Space>'<CR>
vnoremap <silent> <leader> :silent <c-u> :silent WhichKeyVisual '<Space>'<CR>

" open help in vertical split
autocmd FileType help wincmd L

" remap command mode key
noremap ; :
nnoremap <S-CR> o<Esc>
autocmd CmdwinEnter * nnoremap <CR> <CR>
autocmd BufReadPost quickfix nnoremap <CR> <CR>

" vim-terraform config
let g:terraform_align = 1
let g:terraform_fmt_on_save = 1

" keep lines selected to indent
vnoremap > >gv
vnoremap < <gv

" vim tmux navigator
nnoremap <silent> <C-Left> :TmuxNavigateLeft<cr>
nnoremap <silent> <C-Down> :TmuxNavigateDown<cr>
nnoremap <silent> <C-Up> :TmuxNavigateUp<cr>
nnoremap <silent> <C-Right> :TmuxNavigateRight<cr>

luafile ~/.config/nvim/lua/lsp/init.lua
luafile ~/.config/nvim/lua/config/treesitter.lua
luafile ~/.config/nvim/lua/config/lualine.lua
luafile ~/.config/nvim/lua/config/cmp.lua

" Telescope mappings
source ~/.config/nvim/lua/config/telescope.vim

set langmap=il,li,IL,li,je,JE,ek,EK,kn,KN,nj,NJ
